/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Connection.ConexaoBD;
import Controller.HashtableColaboradorController;
import Controller.HashtableServicoController;
import Model.Colaborador;
import Model.Tarefas;
import Persistence.ClientesDAO;
import Persistence.ColaboradorDAO;
import static Persistence.ColaboradorDAO.selectColaborador;
import Persistence.ServicoDAO;
import static Persistence.ServicoDAO.selectServico;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guerra
 */
public class CadastroColabServico extends javax.swing.JFrame {

    private final HashtableColaboradorController repositoColaboradorController;
    private final HashtableServicoController servicoController;

    /**
     * Creates new form cadastroColaborador
     */
    public CadastroColabServico() {
        repositoColaboradorController = new HashtableColaboradorController();
        servicoController = new HashtableServicoController();

        initComponents();
        carregarColaboradoresNaTabela();
        carregarServicosNaTabela();      // Carrega os serviços na tabela

    }

    private void carregarColaboradoresNaTabela() {
        try (Connection conexao = ConexaoBD.getConexao()) {
            if (conexao != null && !conexao.isClosed()) {
                System.out.println("Conexão bem-sucedida com o banco de dados!");

                repositoColaboradorController.clear();
                selectColaborador(conexao, repositoColaboradorController);

                DefaultTableModel model = (DefaultTableModel) tableColaborador.getModel();
                model.setRowCount(0);

                Enumeration<Colaborador> colaboradoresEnum = repositoColaboradorController.ListarTodosColaboradores().elements();

                while (colaboradoresEnum.hasMoreElements()) {
                    Colaborador colaborador = colaboradoresEnum.nextElement();
                    model.addRow(new Object[]{
                        colaborador.getId(),
                        colaborador.getNome()
                    });
                }
            }
        } catch (SQLException e) {
            System.err.println("Erro ao conectar ou consultar o banco de dados: " + e.getMessage());
        } catch (Exception e) {
            System.err.println("Erro geral: " + e.getMessage());
        }
    }

    private void carregarServicosNaTabela() {
        try (Connection conexao = ConexaoBD.getConexao()) {
            if (conexao != null && !conexao.isClosed()) {
                System.out.println("Conexão bem-sucedida com o banco de dados!");

                // Limpa o repositório de serviços
                servicoController.clear();

                // Busca os serviços no banco de dados e os adiciona ao repositório
                selectServico(conexao, servicoController);

                // Atualiza o modelo da tabela de serviços
                DefaultTableModel model = (DefaultTableModel) cadastroServico.getModel();
                model.setRowCount(0);

                Enumeration<Tarefas> servicosEnum = servicoController.listarTodosServico().elements();
                while (servicosEnum.hasMoreElements()) {
                    Tarefas servico = servicosEnum.nextElement();
                    model.addRow(new Object[]{
                        servico.getNome(),
                        servico.getPreco()
                    });
                }
            }
        } catch (SQLException e) {
            System.err.println("Erro ao conectar ou consultar o banco de dados: " + e.getMessage());
        } catch (Exception e) {
            System.err.println("Erro geral: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableCadastro = new javax.swing.JTabbedPane();
        tabledServico = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cadastroServico = new javax.swing.JTable();
        LabelNome = new javax.swing.JLabel();
        textNomeServico = new javax.swing.JTextField();
        LabelPreço = new javax.swing.JLabel();
        textPrecoServico = new javax.swing.JTextField();
        buttonAdicionarServico = new javax.swing.JButton();
        buttonRemoverServico = new javax.swing.JButton();
        textRemoverServico = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        buttonAtualizarServico = new javax.swing.JButton();
        tabledColaborador = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableColaborador = new javax.swing.JTable();
        nomeColab = new javax.swing.JLabel();
        textColab = new javax.swing.JTextField();
        buttonAdicionarColb = new javax.swing.JButton();
        buttonRemoverCollab = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textRemoverColaborador = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cadastroServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Preço"
            }
        ));
        cadastroServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastroServicoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cadastroServico);

        LabelNome.setText("Nome");

        textNomeServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNomeServicoActionPerformed(evt);
            }
        });

        LabelPreço.setText("Preço");

        textPrecoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPrecoServicoActionPerformed(evt);
            }
        });

        buttonAdicionarServico.setText("Adicionar");
        buttonAdicionarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdicionarServicoActionPerformed(evt);
            }
        });

        buttonRemoverServico.setText("Remover");
        buttonRemoverServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverServicoActionPerformed(evt);
            }
        });

        jLabel2.setText("Remover");

        buttonAtualizarServico.setText("Atualizar");
        buttonAtualizarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAtualizarServicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabledServicoLayout = new javax.swing.GroupLayout(tabledServico);
        tabledServico.setLayout(tabledServicoLayout);
        tabledServicoLayout.setHorizontalGroup(
            tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1121, Short.MAX_VALUE)
            .addGroup(tabledServicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelNome)
                    .addComponent(textNomeServico)
                    .addComponent(LabelPreço)
                    .addComponent(textPrecoServico, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addGroup(tabledServicoLayout.createSequentialGroup()
                        .addComponent(buttonAdicionarServico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonAtualizarServico)))
                .addGap(28, 28, 28)
                .addGroup(tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textRemoverServico, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRemoverServico))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabledServicoLayout.setVerticalGroup(
            tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabledServicoLayout.createSequentialGroup()
                .addGap(0, 43, Short.MAX_VALUE)
                .addGroup(tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelNome)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNomeServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textRemoverServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(LabelPreço)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textPrecoServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabledServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdicionarServico)
                    .addComponent(buttonRemoverServico)
                    .addComponent(buttonAtualizarServico))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tableCadastro.addTab("Serviço", tabledServico);

        tableColaborador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome"
            }
        ));
        jScrollPane1.setViewportView(tableColaborador);

        nomeColab.setText("Nome");

        textColab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textColabActionPerformed(evt);
            }
        });

        buttonAdicionarColb.setText("Adicionar");
        buttonAdicionarColb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdicionarColbActionPerformed(evt);
            }
        });

        buttonRemoverCollab.setText("Remover");
        buttonRemoverCollab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverCollabActionPerformed(evt);
            }
        });

        jLabel1.setText("Remover");

        javax.swing.GroupLayout tabledColaboradorLayout = new javax.swing.GroupLayout(tabledColaborador);
        tabledColaborador.setLayout(tabledColaboradorLayout);
        tabledColaboradorLayout.setHorizontalGroup(
            tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1121, Short.MAX_VALUE)
            .addGroup(tabledColaboradorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeColab, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textColab, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAdicionarColb))
                .addGap(240, 240, 240)
                .addGroup(tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonRemoverCollab)
                    .addComponent(jLabel1)
                    .addComponent(textRemoverColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(491, Short.MAX_VALUE))
        );
        tabledColaboradorLayout.setVerticalGroup(
            tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabledColaboradorLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nomeColab, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textColab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textRemoverColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(tabledColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdicionarColb)
                    .addComponent(buttonRemoverCollab))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tableCadastro.addTab("Colaborador", tabledColaborador);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableCadastro)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableCadastro)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textPrecoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPrecoServicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPrecoServicoActionPerformed

    private void buttonAdicionarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdicionarServicoActionPerformed
        try {
            String nome = textNomeServico.getText().trim();

            String preco = textPrecoServico.getText().trim();
            Double i = Double.parseDouble(preco);
            Tarefas servico = new Tarefas();
            servico.setNome(nome);
            servico.setPreco(i);
            if (nome.isEmpty() || preco.isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.",
                        "Erro", JOptionPane.ERROR_MESSAGE);
                return; // Encerra o método se houver campos vazios
            }
            ServicoDAO servicoDAO = new ServicoDAO();
            servicoDAO.insertServico(servico);
            JOptionPane.showMessageDialog(this, "Serviço adicionado com sucesso!",
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            textColab.setText("");
            carregarServicosNaTabela();
        } catch (Exception e) {
            e.printStackTrace();  // Exibe o erro caso algo dê errado
            JOptionPane.showMessageDialog(this, "Erro ao adicionar servico " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonAdicionarServicoActionPerformed

    private void buttonRemoverServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverServicoActionPerformed
        try {
            String input = textRemoverServico.getText().trim();
            ServicoDAO servicoDAO = new ServicoDAO();
            servicoDAO.removerServico(input);
            JOptionPane.showMessageDialog(this, "Serviço removido com sucesso!",
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            carregarServicosNaTabela();
            textRemoverServico.setText("");

        } catch (Exception e) {
            e.printStackTrace();  // Exibe o erro caso algo dê errado
            JOptionPane.showMessageDialog(this, "Erro ao adicionar Serviço : " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonRemoverServicoActionPerformed

    private void cadastroServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastroServicoMouseClicked

    }//GEN-LAST:event_cadastroServicoMouseClicked

    private void textColabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textColabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textColabActionPerformed

    private void buttonAdicionarColbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdicionarColbActionPerformed
        try {
            String nome = textColab.getText().trim();
            Colaborador colaborador = new Colaborador();
            colaborador.setNome(nome);
            if (nome.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.",
                        "Erro", JOptionPane.ERROR_MESSAGE);
                return; // Encerra o método se houver campos vazios
            }
            nome = nome.substring(0, 1).toUpperCase() + nome.substring(1).toLowerCase();

            ColaboradorDAO colaboradorDAO = new ColaboradorDAO();
            colaboradorDAO.insertColaborador(colaborador);
            JOptionPane.showMessageDialog(this, "Colaborador adicionado com sucesso!",
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            textColab.setText("");
            carregarColaboradoresNaTabela();
        } catch (Exception e) {
            e.printStackTrace();  // Exibe o erro caso algo dê errado
            JOptionPane.showMessageDialog(this, "Erro ao adicionar colaborador: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
        ;

    }//GEN-LAST:event_buttonAdicionarColbActionPerformed

    private void buttonRemoverCollabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverCollabActionPerformed
        try {
            String input = textRemoverColaborador.getText().trim();
            int i = Integer.parseInt(input);
            ColaboradorDAO colaboradorDAO = new ColaboradorDAO();
            colaboradorDAO.deleteColaboradorById(i);
            JOptionPane.showMessageDialog(this, "Colaborador removido com sucesso!",
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            carregarColaboradoresNaTabela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao remover colaborador: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            textRemoverColaborador.setText("");
        }

    }//GEN-LAST:event_buttonRemoverCollabActionPerformed

    private void textNomeServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNomeServicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNomeServicoActionPerformed

    private void buttonAtualizarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAtualizarServicoActionPerformed
        try {
            String nomeAlterar = textNomeServico.getText().trim();
            String precoAlterar = textPrecoServico.getText().trim();
            Double i = Double.parseDouble(precoAlterar);
            Tarefas servico = new Tarefas();
            servico.setNome(nomeAlterar);
            servico.setPreco(i);
            ServicoDAO servicoDAO = new ServicoDAO();
            servicoDAO.updateServico(servico, nomeAlterar);
            JOptionPane.showMessageDialog(this, "Servico Alterado com sucesso!",
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            carregarServicosNaTabela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar colaborador: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            textNomeServico.setText("");
            textPrecoServico.setText("");

        }
    }//GEN-LAST:event_buttonAtualizarServicoActionPerformed

    private void atualizarTabelaCliente(Colaborador colaborador) {
        // Limpa a tabela antes de adicionar o colaborador
        DefaultTableModel model = (DefaultTableModel) tableColaborador.getModel();
        model.setRowCount(0);

        // Adiciona o colaborador específico
        model.addRow(new Object[]{colaborador.getNome()});
    }

    private void limparTabela() {
        DefaultTableModel model = (DefaultTableModel) tableColaborador.getModel();
        model.setRowCount(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroColabServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroColabServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroColabServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroColabServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroColabServico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelNome;
    private javax.swing.JLabel LabelPreço;
    private javax.swing.JButton buttonAdicionarColb;
    private javax.swing.JButton buttonAdicionarServico;
    private javax.swing.JButton buttonAtualizarServico;
    private javax.swing.JButton buttonRemoverCollab;
    private javax.swing.JButton buttonRemoverServico;
    private javax.swing.JTable cadastroServico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nomeColab;
    private javax.swing.JTabbedPane tableCadastro;
    private javax.swing.JTable tableColaborador;
    private javax.swing.JPanel tabledColaborador;
    private javax.swing.JPanel tabledServico;
    private javax.swing.JTextField textColab;
    private javax.swing.JTextField textNomeServico;
    private javax.swing.JTextField textPrecoServico;
    private javax.swing.JTextField textRemoverColaborador;
    private javax.swing.JTextField textRemoverServico;
    // End of variables declaration//GEN-END:variables
}
